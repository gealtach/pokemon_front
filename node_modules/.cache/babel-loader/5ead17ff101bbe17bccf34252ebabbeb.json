{"ast":null,"code":"const initialState = {\n  allPokemons: [],\n  types: [],\n  change: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_POKEMONS':\n      return {\n        ...state,\n        allPokemons: action.payload,\n        change: action.payload\n      };\n    case 'GETALLTYPES':\n      return {\n        ...state,\n        types: action.payload\n      };\n    case 'TYPE_FILTERED':\n      const pokemonsByType = state.pokemons;\n      const filteredTypes = action.payload === 'all' ? pokemonsByType : pokemonsByType.filter(pokemon => pokemon.types.includes(action.payload));\n      console.log(pokemonsByType);\n      return {\n        ...state,\n        allPokemons: filteredTypes,\n        change: [...filteredTypes]\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","allPokemons","types","change","rootReducer","state","arguments","length","undefined","action","type","payload","pokemonsByType","pokemons","filteredTypes","filter","pokemon","includes","console","log"],"sources":["/home/cesar/Documents/Henry/PI-Pokemon-main/client/src/redux/reducer.js"],"sourcesContent":["\nconst initialState = {\n    allPokemons: [],\n    types: [],\n    change: [],\n}\n\nfunction rootReducer (state = initialState, action) {\n    switch(action.type) {\n        case 'GET_POKEMONS':\n            return{\n                ...state,\n                allPokemons: action.payload,\n                change: action.payload,\n            }\n\n        case 'GETALLTYPES':\n            return {\n                ...state,\n                types: action.payload\n            };\n        \n        case 'TYPE_FILTERED':\n            const pokemonsByType = state.pokemons;\n            const filteredTypes = action.payload === 'all' ?\n                pokemonsByType : pokemonsByType.filter((pokemon) => pokemon.types.includes(action.payload));\n                console.log(pokemonsByType);\n            return {\n                ...state,\n                allPokemons: filteredTypes,\n                change: [...filteredTypes]\n            };\n\n        default :\n            return state\n    }\n}\n\nexport default rootReducer;"],"mappings":"AACA,MAAMA,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;AACZ,CAAC;AAED,SAASC,WAAWA,CAAA,EAAgC;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC9C,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,OAAM;QACF,GAAGL,KAAK;QACRJ,WAAW,EAAEQ,MAAM,CAACE,OAAO;QAC3BR,MAAM,EAAEM,MAAM,CAACE;MACnB,CAAC;IAEL,KAAK,aAAa;MACd,OAAO;QACH,GAAGN,KAAK;QACRH,KAAK,EAAEO,MAAM,CAACE;MAClB,CAAC;IAEL,KAAK,eAAe;MAChB,MAAMC,cAAc,GAAGP,KAAK,CAACQ,QAAQ;MACrC,MAAMC,aAAa,GAAGL,MAAM,CAACE,OAAO,KAAK,KAAK,GAC1CC,cAAc,GAAGA,cAAc,CAACG,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACd,KAAK,CAACe,QAAQ,CAACR,MAAM,CAACE,OAAO,CAAC,CAAC;MAC3FO,OAAO,CAACC,GAAG,CAACP,cAAc,CAAC;MAC/B,OAAO;QACH,GAAGP,KAAK;QACRJ,WAAW,EAAEa,aAAa;QAC1BX,MAAM,EAAE,CAAC,GAAGW,aAAa;MAC7B,CAAC;IAEL;MACI,OAAOT,KAAK;EAAA;AAExB;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}